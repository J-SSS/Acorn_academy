Q1. case 01 패키지를 만들어 아래 내용을 수행하세요.
	1) ScoreParent
	  - 필드: 이름, 국어, 영어, 수학, 총점, 평균
	  - 정보은닉(get/set)
	2) ScoreChild
	  - 필드: 음악, 체육
	  - 정보은닉(get/set) 
	3) ScoreMain
	  - 메뉴: 1.입력  2.출력  0.프로그램 종료
	  - ScoreChild[] score = new ScoreChild[5];
	  - 입력: ScoreChild 이용해, 이름, 국어, 영어, 수학, 음악, 체육 점수 입력
	  - 출력: ScoreChild 이용해, 이름, 총점, 평균 출력
	4) ScoreService
	  - Main에서 사용할 기능 구현

Q2. case02 패키지를 만들어 아래 내용을 수행하세요.
	1) Fruit 클래스
	- 필드: 가격, 수량
	- 메소드: 출력 메소드
	2) Banana 클래스
	- 필드: 가격(1000), 수량(10)   /  메소드(오버라이딩)
	3) Apple 클래스
	- 필드: 가격(1500), 수량(5)   /  메소드(오버라이딩)
	4) Orange 클래스
	- 필드: 가격(2000), 수량(20)   /  메소드(오버라이딩)
	5) Main 클래스
	- Fruit 클래스 타입으로 각각의 자식 클래스 객체 생성/출력
	
	가격: 1500
	수량: 5
	가격: 1000
	수량: 10
	가격: 2000
	수량: 20
	
Q3. case03 패키지를 만들어 아래 내용을 수행하세요.
	1) StudentParent
	- 필드: 학번, 이름, 학과  /  get/set
	2) StudentChild
	- 필드: 성별, 나이		 /  get/set
	3) StudentMain
	- StudentChild[] = new StudentChild[3];
	- 입력: StudentChild를 이용해 학번, 이름, 학과, 성별, 나이 입력 (하나씩 입력)
	- 출력: StudentChild를 이용해 학번, 이름, 학과, 성별, 나이 출력
	- 메뉴: 1.입력  2.출력  0.프로그램 종료
	4) StudentService
	- Main에서 사용할 기능 구현
	
Q4. case04 패키지를 만들어 아래 내용을 수행하세요.
	1) User
	- 필드: 아이디, 패스워드   /   get/set
	2) UserChild1
	- 필드: 이름, 이메일   /   get/set
	3) UserChild2
	- 나이   /   get/set
	4) UserMain
	- UserChild2[] uc = new UserChild2[3];	
	- (입력) id, pw, name, email, age
	- (출력) id, pw, name, email, age
	5) UserService
	- Main에서 사용할 기능 구현























	