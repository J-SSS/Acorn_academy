Q1. Quiz01패키지를 생성해 아래 내용을 수행하세요
	- 키가 170, 몸무게가 65, 이름이 Tomy, 나이 30세인 남성을
	- 객체로 구현하고, 해당 정보를 출력하세요
	
	키가 170.0이고, 몸무게가 65.0kg인 남성이 있습니다
	이름은 Tomy이고, 나이는 30세입니다.
	
Q2. Quiz02패키지를 생성해 아래 내용을 수행하세요.
	- 아래 출력된 주문 내용을 객체로 구현하고 출력하세요.
	
	주문 접수번호 : 1001
	주문 전화번호 : 010-1111-2222
	주문 집주소 : 서울시 강남구 역삼동 111
	주문 가격 : 35000
	
Q3. case03 패키지를 생성해 아래 내용을 구현하세요
	- Student 클래스를 생성하여 
	- 이름, 국어, 수학, 영어 점수를 입력받아(메소드를 만들어)
	- 이름, 총점, 평균을 출력하는 메소드를 만들어
	- StudentMain 클래스에서 실행(학생 2명 생성)
	
Q4. case04 패키지를 생성해 아래 내용을 수행하세요.
	-성적을 입력할 인원수를 입력받아서
	-배열을 생성(학생class 타입의 객체를 각 방에 저장)
	-입력 기능과 출력 기능을 무한 반복으로 실행
	-입력은 1명씩, 출력은 입력된걸 모두 출력
	-메뉴 : 1.입력 2.출력 0.프로그램종료
	
	
Q5. case05 패키지를 생성해 아래 내용을 수행하세요.
	- 주사위 굴리기
	- 주사위 객체 만들기
	- 주사위를 던져 매번 특정한 숫자가 나오는데
	- 이를 계속 진행할지 여부를 y.n으로 체크하는 프로그램을 만드세요
	- 주사위 객체 생성 클래스, 입력 체크 클래스, 실행용 클래스로 분리

Q6. case06 패키지를 생성해 아래 내용을 수행하세요.
	- Person 클래스를 생성해, toString 메소드를 이용하여
	- 실행용 클래스에 person 객체를 생성하고
	- 해당 객체의 이름과 나이를 출력하세요
	
	
Q7. case07패키지를 생성해 아래 내용을 수행하세요
	1) Drink 클래스 생성 
		- 필드3개
		- 음료이름, 총판매금액, 총판매수량
		
	2) 실행용 클래스를 만들어서 카페프로그램 생성
		- Drink 클래스 객체를 저장할 배열 생성/사용
		- 해당 음료의 요금을 저장할 배열;;
		- 주문시 사용할 수량 저장 배열;;
	
	
Q8. case08 패키지를 생성해 아래 내용을 수행하세요
	1) Group 클래스
	- 필드 :그룹이름, 그룹인원수, 그룹대표곡
	- 메소드: 인풋,() 아웃풋()
	2) GroupService 클래스
	- GroupMain실행용에서 필요한 기능을 구현
	- 사이즈,메뉴,인풋
	3) GroupMain 클래스(실행용)
	- 프로그램 실행에 대한 클래스
	- 메뉴: 1. 입력 2. 출력 0. 종료
	- 그룹 등록 수는 자유(동적 할당, 지정해도 상관없음)

Q09. case09 패키지를 생성해 아래 내용을 수행하세요
	1) Student 클래스
	- 필드 : 이름, 국어, 영어, 수학, 총점, 평규
	2) StudentMain 클래스
	- 프로그램 실행에 대한 클래스
	- 메뉴: 1.성적입력, 2.성적출력, 3.종료
	- student 클래스 배열의 방 갯수 : 입력
	3) StudentService 클래스
	- 필요한 기능 구현
	
	
Q10. case10 패키지를 생성해 아래 내용을 수행하세요
	Q09복습문제
	1) Book 클래스
	- 필드: 책이름, 저자, 책가격
	2) BookMain클래스
	- 프로그램 실행에 대한 클래스
	- 메뉴: 1.책등록 2.책출력 0.종료
	3) BookService 클래스
	- Main에서 필요한 기능 구현

Q11. case11 패키지를 생성하여 아래 내용을 수행하세요

	1) Score 클래스
	- 필드: 이름, 점수
	2) ScoreMain클래스
	- 실행에 필요한 클래스
	- 메뉴: 1.입력 2.출력 3.수정 4.삭제 0.종료
	- 입력은 하나씩 입력
	- 출력은 입력한 수 만큼만 출력
	- 입력 개수는 3개로 지정 (배열사용)
		> 3개가 다 찼는데, 입력 선택하면 "더이상 입력할 수 없습니다"/
		> 3개가 다 비어있는데 출력 선택하면 "출력할 내용이 없습니다."
	- 수정과 삭제는 이름을 검색해서 수정/삭제
	
	3) ScoreService 클래스
	- Main에서 필요한 기능을 구현
	
Q12. case12 패키지를 생성해 아래 내용을 수행하세요
	1) Student 클래스
	- 필드: 학번, 이름, 전공
	
	2) StudentMain 클래스
	- 프로그램 실행에 대한 클래스
	- 메뉴: 1.입력 2.출력 3.수정 4.삭제 0.종료
	- 입력은 하나씩 입력
	- 출력은 입력한 수만큼만 출력
	- 입력 개수는 3개로 지정 (배열 사용)
	- 수정과 삭제는 학번을 검색해서 수정/삭제
	
	3) StudentService 클래스
	- Main에서 필요한 기능 구현
	
Q13. case13패키지를 생성해 아래 내용을 수행하세요.
	- 아래의 상황을 OOP(Object Oriented Programming) 방식으로 구현해보세요
	- 직장생활을 하는 영수는 어느 날, 출근 시간에 회사에 늦을 것 같아서 택시를 잡았습니다.
	- 다행히 지각을 하지는 않았고, 택시비용만 5,000원을 지불했씁니다.
	- 택시비를 지불하기 전 영수가 갖고 있었던 돈은 2,000원이었고,
	- 영수가 이용한 택시회사의 이름은 KAKAO였습니다.
	
	- Taxi, Worker, Main(실행용) 클래스 생성
	- 필드의 초기화는 생성자 활용
	
	(출력내용)
	KAKAO사의 수입은 5000원입니다.
	영수님의 잔액은 15,000원입니다.
	
Q14. case14패키지를 생성해 아래 내용을 수행하세요
	- A와 B는 각각 지하철과 버스를 타고 결혼식장에 갑니다.
	- A와 B는 각각 10,000원을 갖고 있습니다.
	- A는 1호선 지하철을 타고, 운임비로 3,000원을 지불했습니다.
	- B는 500번 버스를 타고, 운임비로 2,000원을 지불했습니다.
	- 버스는 400번, 500번 버스가 있습니다.
	- 지하철 노선은 1호선과 2호선이 있습니다.
	- A와 B가 이용한 버스와 지하철의 이용승객은 이 둘 외에는 없습니다.
	
	- Bus, Subway, Worker, Main(실행용) 클래스 생성
	- 기본으로 주어진 값은 생성자로 초기화
	
	(출력 내용)
	B님의 남은 돈은 8000원입니다.
	500번 버스의 승객은 1명이고, 수입은 2000원입니다
	400번 버스의 승객은 0명이고, 수입은 0원입니다.
	
	A님의 남은 돈은 7000원입니다.
	1호선 지하철의 승객은 1명이고, 수입은 3000원입니다
	

	
	
	
//////////////////////////////////////////////////////
	인원수 입력: 2
1. 입력
2. 출력
0. 프로그램 종료
>>> 1
이름 입력: Smith
국어 점수 입력: 10
영어 점수 입력: 10
수학 점수 입력: 10
1. 입력
2. 출력
0. 프로그램 종료
>>> 2
이름: Smith
총점: 30
평균: 10.0
1. 입력
2. 출력
0. 프로그램 종료
>>> 1
이름 입력: Tom
국어 점수 입력: 20
영어 점수 입력: 20
수학 점수 입력: 20
1. 입력
2. 출력
0. 프로그램 종료
>>> 2
이름: Smith
총점: 30
평균: 10.0
이름: Tom
총점: 60
평균: 20.0
1. 입력
2. 출력
0. 프로그램 종료
>>> 0
프로그램 종료

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
음료 메뉴 수량: 2
음료 이름 입력: 아메리카노
음료 이름 입력: 카페라떼
아메리카노의 요금 입력: 100
카페라떼의 요금 입력: 200
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 3
#### 매출 현황 ####
--- 아메리카노 ---
총 판매 금액: 0
총 판매 수량: 0
--- 카페라떼 ---
총 판매 금액: 0
총 판매 수량: 0
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 2
#### 결제 ####
1. 아메리카노: 0
2. 카페라떼: 0
총 금액: 0
결제 완료되었습니다.
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 3
#### 매출 현황 ####
--- 아메리카노 ---
총 판매 금액: 0
총 판매 수량: 0
--- 카페라떼 ---
총 판매 금액: 0
총 판매 수량: 0
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 1
#### 메뉴 ####
1. 아메리카노: 100원
2. 카페라떼: 200원
메뉴 선택: 1
수량 입력: 5
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 3
#### 매출 현황 ####
--- 아메리카노 ---
총 판매 금액: 0
총 판매 수량: 0
--- 카페라떼 ---
총 판매 금액: 0
총 판매 수량: 0
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 2
#### 결제 ####
1. 아메리카노: 5
2. 카페라떼: 0
총 금액: 500
결제 완료되었습니다.
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 3
#### 매출 현황 ####
--- 아메리카노 ---
총 판매 금액: 500
총 판매 수량: 5
--- 카페라떼 ---
총 판매 금액: 0
총 판매 수량: 0
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 1
#### 메뉴 ####
1. 아메리카노: 100원
2. 카페라떼: 200원
메뉴 선택: 2
수량 입력: 10
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 3
#### 매출 현황 ####
--- 아메리카노 ---
총 판매 금액: 500
총 판매 수량: 5
--- 카페라떼 ---
총 판매 금액: 0
총 판매 수량: 0
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 2
#### 결제 ####
1. 아메리카노: 0
2. 카페라떼: 10
총 금액: 2000
결제 완료되었습니다.
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 3
#### 매출 현황 ####
--- 아메리카노 ---
총 판매 금액: 500
총 판매 수량: 5
--- 카페라떼 ---
총 판매 금액: 2000
총 판매 수량: 10
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 1
#### 메뉴 ####
1. 아메리카노: 100원
2. 카페라떼: 200원
메뉴 선택: 1
수량 입력: 10
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 2
#### 결제 ####
1. 아메리카노: 10
2. 카페라떼: 0
총 금액: 1000
결제 완료되었습니다.
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 3
#### 매출 현황 ####
--- 아메리카노 ---
총 판매 금액: 1500
총 판매 수량: 15
--- 카페라떼 ---
총 판매 금액: 2000
총 판매 수량: 10
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 
5
잘못된 선택입니다.
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 0
잘못된 선택입니다.
#### 선택 ####
1. 주문
2. 결제
3. 총 매출 현황
선택: 
